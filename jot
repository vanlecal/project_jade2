I'm developing an application using MERN stack and tailwind CSS,  I've already created the authentication using jwt and dashboard component for the project, butwhat's missing is the component to be responsible for displaying a loading screen. I want to understand the best flow to enable the page loading component display. If the loading screen is supposed to display in the login and sign up page when checking user credentials and or redirect a user to his dashboard and still display a loading screen enabling the user data to be fetched from the backend to the dashboard before the loading screen goes off







//Dashoard loading snippnet

useEffect(() => {
  const fetchUserData = async () => {
    setLoading(true);
    try {
      const response = await getRequest('/api/user-profile');
      setUserData(response.data);
    } catch (error) {
      console.error(error);
    } finally {
      setLoading(false);
    }
  };

  fetchUserData();
}, []);



login loading snippet;
const handleLogin = async () => {
  setLoading(true); // Show LoadingScreen

  try {
    const response = await postRequest('/api/login', { email, password });
    if (response.success) {
      navigate('/dashboard'); // Go to dashboard
    }
  } catch (error) {
    console.error(error);
  } finally {
    setLoading(false); // Hide LoadingScreen
  }
};

















  useEffect(() => {
    const fetchLecturer = async () => {
      setLoading(true);
      setError(null);
      try {
        const token = localStorage.getItem("token");
        if (!token) {
          throw new Error("No token found");
        }

        const data = await getRequest("lecturer/me", token);
        setLecturerName(data.name);
      } catch (err: unknown) {
        const errorMessage =
          err instanceof Error ? err.message : "Failed to fetch lecturer data";
        setError(errorMessage);
        console.error("Error fetching lecturer info:", err);
        navigate("/lecturer/login"); // Redirect to login on error
      } finally {
        setLoading(false);
      }
    };

    fetchLecturer();
  }, [navigate]);